// Generated by view binder compiler. Do not edit!
package com.docoding.clickcare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.docoding.clickcare.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DoctorListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView allRating;

  @NonNull
  public final TextView avgRating;

  @NonNull
  public final TextView doctorName;

  @NonNull
  public final CircleImageView doctorPhoto;

  @NonNull
  public final TextView doctorSpesialis;

  @NonNull
  public final ImageView status;

  private DoctorListBinding(@NonNull LinearLayout rootView, @NonNull TextView allRating,
      @NonNull TextView avgRating, @NonNull TextView doctorName,
      @NonNull CircleImageView doctorPhoto, @NonNull TextView doctorSpesialis,
      @NonNull ImageView status) {
    this.rootView = rootView;
    this.allRating = allRating;
    this.avgRating = avgRating;
    this.doctorName = doctorName;
    this.doctorPhoto = doctorPhoto;
    this.doctorSpesialis = doctorSpesialis;
    this.status = status;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DoctorListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DoctorListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.doctor_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DoctorListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.all_rating;
      TextView allRating = ViewBindings.findChildViewById(rootView, id);
      if (allRating == null) {
        break missingId;
      }

      id = R.id.avg_rating;
      TextView avgRating = ViewBindings.findChildViewById(rootView, id);
      if (avgRating == null) {
        break missingId;
      }

      id = R.id.doctor_name;
      TextView doctorName = ViewBindings.findChildViewById(rootView, id);
      if (doctorName == null) {
        break missingId;
      }

      id = R.id.doctor_photo;
      CircleImageView doctorPhoto = ViewBindings.findChildViewById(rootView, id);
      if (doctorPhoto == null) {
        break missingId;
      }

      id = R.id.doctor_spesialis;
      TextView doctorSpesialis = ViewBindings.findChildViewById(rootView, id);
      if (doctorSpesialis == null) {
        break missingId;
      }

      id = R.id.status;
      ImageView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      return new DoctorListBinding((LinearLayout) rootView, allRating, avgRating, doctorName,
          doctorPhoto, doctorSpesialis, status);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
